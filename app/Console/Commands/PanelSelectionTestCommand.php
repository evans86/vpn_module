<?php

namespace App\Console\Commands;

use App\Repositories\Panel\PanelRepository;
use Illuminate\Console\Command;

class PanelSelectionTestCommand extends Command
{
    protected $signature = 'panel:selection-test {iterations=5}';
    protected $description = '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è';

    public function handle(PanelRepository $panelRepository)
    {
        $iterations = (int)$this->argument('iterations');
        $this->info("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –Ω–∞ {$iterations} –∏—Ç–µ—Ä–∞—Ü–∏–π...");

        $distribution = [];

        for ($i = 1; $i <= $iterations; $i++) {
            // –û—á–∏—â–∞–µ–º –∫—ç—à –ø–µ—Ä–µ–¥ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–µ–π –¥–ª—è —á–∏—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞
            app('cache')->forget('optimized_marzban_panel');

            $panel = $panelRepository->getOptimizedMarzbanPanel();

            if ($panel) {
                $panelId = $panel->id;
                $distribution[$panelId] = ($distribution[$panelId] ?? 0) + 1;

                $this->line("–ò—Ç–µ—Ä–∞—Ü–∏—è {$i}: –í—ã–±—Ä–∞–Ω–∞ –ø–∞–Ω–µ–ª—å ID {$panelId}");
            } else {
                $this->error("–ò—Ç–µ—Ä–∞—Ü–∏—è {$i}: –ü–∞–Ω–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");
            }
        }

        $this->line("\nüìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è:");
        foreach ($distribution as $panelId => $count) {
            $percentage = ($count / $iterations) * 100;
            $this->line("–ü–∞–Ω–µ–ª—å ID {$panelId}: {$count} —Ä–∞–∑ (" . number_format($percentage, 1) . "%)");
        }
    }
}
